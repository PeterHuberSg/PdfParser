using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;


namespace PdfParserLib {


  public static class PdfEncodings {


    // >>>>>>>>>>>>>>>>>>>>>>>>>start code copied from CodeGenerator<<<<<<<<<<<<<<<<<<<<<<<<<
    public static Dictionary<string, char> Chars  = new Dictionary<string, char>() {
        {"A",'A' },
        {"AE",'Æ' },
        {"Aacute",'Á' },
        {"Acircumflex",'Â' },
        {"Adieresis",'Ä' },
        {"Agrave",'À' },
        {"Aring",'Å' },
        {"Atilde",'Ã' },
        {"B",'B' },
        {"C",'C' },
        {"Ccedilla",'Ç' },
        {"D",'D' },
        {"E",'E' },
        {"Eacute",'É' },
        {"Ecircumflex",'Ê' },
        {"Edieresis",'Ë' },
        {"Egrave",'È' },
        {"Eth",'Ð' },
        {"Euro",'€' },
        {"F",'F' },
        {"G",'G' },
        {"H",'H' },
        {"I",'I' },
        {"Iacute",'Í' },
        {"Icircumflex",'Î' },
        {"Idieresis",'Ï' },
        {"Igrave",'Ì' },
        {"J",'J' },
        {"K",'K' },
        {"L",'L' },
        {"Lslash",'Ł' },
        {"M",'M' },
        {"N",'N' },
        {"Ntilde",'Ñ' },
        {"O",'O' },
        {"OE",'Œ' },
        {"Oacute",'Ó' },
        {"Ocircumflex",'Ô' },
        {"Odieresis",'Ö' },
        {"Ograve",'Ò' },
        {"Oslash",'Ø' },
        {"Otilde",'Õ' },
        {"P",'P' },
        {"Q",'Q' },
        {"R",'R' },
        {"S",'S' },
        {"Scaron",'Š' },
        {"T",'T' },
        {"Thorn",'Þ' },
        {"U",'U' },
        {"Uacute",'Ú' },
        {"Ucircumflex",'Û' },
        {"Udieresis",'Ü' },
        {"Ugrave",'Ù' },
        {"V",'V' },
        {"W",'W' },
        {"X",'X' },
        {"Y",'Y' },
        {"Yacute",'Ý' },
        {"Ydieresis",'Ÿ' },
        {"Z",'Z' },
        {"Zcaron",'Ž' },
        {"a",'a' },
        {"aacute",'á' },
        {"acircumflex",'â' },
        {"acute",'´' },
        {"adieresis",'ä' },
        {"ae",'æ' },
        {"agrave",'à' },
        {"ampersand",'&' },
        {"aring",'å' },
        {"asciicircum",'^' },
        {"asciitilde",'~' },
        {"asterisk",'*' },
        {"at",'@' },
        {"atilde",'ã' },
        {"b",'b' },
        {"backslash",'\\' },
        {"bar",'|' },
        {"braceleft",'{' },
        {"braceright",'}' },
        {"bracketleft",'[' },
        {"bracketright",']' },
        {"breve",'˘' },
        {"brokenbar",'¦' },
        {"bullet",'•' },
        {"c",'c' },
        {"caron",'ˇ' },
        {"ccedilla",'ç' },
        {"cedilla",'¸' },
        {"cent",'¢' },
        {"circumflex",'ˆ' },
        {"colon",':' },
        {"comma",',' },
        {"copyright",'©' },
        {"currency",'¤' },
        {"d",'d' },
        {"dagger",'†' },
        {"daggerdbl",'‡' },
        {"degree",'°' },
        {"dieresis",'¨' },
        {"divide",'÷' },
        {"dollar",'$' },
        {"dotaccent",'˙' },
        {"dotlessi",'ı' },
        {"e",'e' },
        {"eacute",'é' },
        {"ecircumflex",'ê' },
        {"edieresis",'ë' },
        {"egrave",'è' },
        {"eight",'8' },
        {"ellipsis",'…' },
        {"emdash",'—' },
        {"endash",'–' },
        {"equal",'=' },
        {"eth",'ð' },
        {"exclam",'!' },
        {"exclamdown",'¡' },
        {"f",'f' },
        {"fi",'ﬁ' },
        {"five",'5' },
        {"fl",'ﬂ' },
        {"florin",'ƒ' },
        {"four",'4' },
        {"fraction",'⁄' },
        {"g",'g' },
        {"germandbls",'ß' },
        {"grave",'`' },
        {"greater",'>' },
        {"guillemotleft",'«' },
        {"guillemotright",'»' },
        {"guilsinglleft",'‹' },
        {"guilsinglright",'›' },
        {"h",'h' },
        {"hungarumlaut",'˝' },
        {"hyphen",'-' },
        {"i",'i' },
        {"iacute",'í' },
        {"icircumflex",'î' },
        {"idieresis",'ï' },
        {"igrave",'ì' },
        {"j",'j' },
        {"k",'k' },
        {"l",'l' },
        {"less",'<' },
        {"logicalnot",'¬' },
        {"lslash",'ł' },
        {"m",'m' },
        {"macron",'¯' },
        {"minus",'−' },
        {"mu",'µ' },
        {"multiply",'×' },
        {"n",'n' },
        {"nine",'9' },
        {"ntilde",'ñ' },
        {"numbersign",'#' },
        {"o",'o' },
        {"oacute",'ó' },
        {"ocircumflex",'ô' },
        {"odieresis",'ö' },
        {"oe",'œ' },
        {"ogonek",'˛' },
        {"ograve",'ò' },
        {"one",'1' },
        {"onehalf",'½' },
        {"onequarter",'¼' },
        {"onesuperior",'¹' },
        {"ordfeminine",'ª' },
        {"ordmasculine",'º' },
        {"oslash",'ø' },
        {"otilde",'õ' },
        {"p",'p' },
        {"paragraph",'¶' },
        {"parenleft",'(' },
        {"parenright",')' },
        {"percent",'%' },
        {"period",'.' },
        {"periodcentered",'·' },
        {"perthousand",'‰' },
        {"plus",'+' },
        {"plusminus",'±' },
        {"q",'q' },
        {"question",'?' },
        {"questiondown",'¿' },
        {"quotedbl",'"' },
        {"quotedblbase",'„' },
        {"quotedblleft",'“' },
        {"quotedblright",'”' },
        {"quoteleft",'‘' },
        {"quoteright",'’' },
        {"quotesinglbase",'‚' },
        {"quotesingle",'\'' },
        {"r",'r' },
        {"registered",'®' },
        {"ring",'˚' },
        {"s",'s' },
        {"scaron",'š' },
        {"section",'§' },
        {"semicolon",';' },
        {"seven",'7' },
        {"six",'6' },
        {"slash",'/' },
        {"sterling",'£' },
        {"t",'t' },
        {"thorn",'þ' },
        {"three",'3' },
        {"threequarters",'¾' },
        {"threesuperior",'³' },
        {"tilde",'˜' },
        {"trademark",'™' },
        {"two",'2' },
        {"twosuperior",'²' },
        {"u",'u' },
        {"uacute",'ú' },
        {"ucircumflex",'û' },
        {"udieresis",'ü' },
        {"ugrave",'ù' },
        {"underscore",'_' },
        {"v",'v' },
        {"w",'w' },
        {"x",'x' },
        {"y",'y' },
        {"yacute",'ý' },
        {"ydieresis",'ÿ' },
        {"yen",'¥' },
        {"z",'z' },
        {"zcaron",'ž' },
        {"zero",'0' },
        {"f_i",'ﬁ' },
        {"f_f",'ﬀ' },
        {"T_h",'ᵺ' },
        {"AEsmall",'æ' },
        {"Aacutesmall",'á' },
        {"Acircumflexsmall",'â' },
        {"Acutesmall",'´' },
        {"Adieresissmall",'ä' },
        {"Agravesmall",'à' },
        {"Aringsmall",'å' },
        {"Asmall",'a' },
        {"Atildesmall",'ã' },
        {"Brevesmall",'˘' },
        {"Bsmall",'b' },
        {"Caronsmall",'ˇ' },
        {"Ccedillasmall",'ç' },
        {"Cedillasmall",'¸' },
        {"Circumflexsmall",'ˆ' },
        {"Csmall",'c' },
        {"Dieresissmall",'¨' },
        {"Dotaccentsmall",'˙' },
        {"Dsmall",'d' },
        {"Eacutesmall",'é' },
        {"Ecircumflexsmall",'ê' },
        {"Edieresissmall",'ë' },
        {"Egravesmall",'è' },
        {"Esmall",'e' },
        {"Ethsmall",'ð' },
        {"Fsmall",'f' },
        {"Gravesmall",'`' },
        {"Gsmall",'g' },
        {"Hsmall",'h' },
        {"Hungarumlautsmall",'˝' },
        {"Iacutesmall",'í' },
        {"Icircumflexsmall",'î' },
        {"Idieresissmall",'ï' },
        {"Igravesmall",'ì' },
        {"Ismall",'i' },
        {"Jsmall",'j' },
        {"Ksmall",'k' },
        {"Lslashsmall",'ł' },
        {"Lsmall",'l' },
        {"Macronsmall",'˛' },
        {"Msmall",'m' },
        {"Nsmall",'n' },
        {"Ntildesmall",'ñ' },
        {"OEsmall",'œ' },
        {"Oacutesmall",'ó' },
        {"Ocircumflexsmall",'ô' },
        {"Odieresissmall",'ö' },
        {"Ogoneksmall",'˛' },
        {"Ogravesmall",'ò' },
        {"Oslashsmall",'ø' },
        {"Osmall",'o' },
        {"Otildesmall",'õ' },
        {"Psmall",'p' },
        {"Qsmall",'q' },
        {"Ringsmall",'˚' },
        {"Rsmall",'r' },
        {"Scaronsmall",'š' },
        {"Ssmall",'s' },
        {"Thornsmall",'þ' },
        {"Tildesmall",'˜' },
        {"Tsmall",'t' },
        {"Uacutesmall",'ú' },
        {"Ucircumflexsmall",'û' },
        {"Udieresissmall",'ü' },
        {"Ugravesmall",'ù' },
        {"Usmall",'u' },
        {"Vsmall",'v' },
        {"Wsmall",'w' },
        {"Xsmall",'x' },
        {"Yacutesmall",'ý' },
        {"Ydieresissmall",'ÿ' },
        {"Ysmall",'y' },
        {"Zcaronsmall",'ž' },
        {"Zsmall",'z' },
        {"ampersandsmall",'&' },
        {"asuperior",'ª' },
        {"bsuperior",'b' },
        {"centinferior",'¢' },
        {"centoldstyle",'¢' },
        {"centsuperior",'¢' },
        {"colonmonetary",'₡' },
        {"commainferior",',' },
        {"commasuperior",',' },
        {"dollarinferior",'$' },
        {"dollaroldstyle",'$' },
        {"dollarsuperior",'$' },
        {"dsuperior",'d' },
        {"eightinferior",'₈' },
        {"eightoldstyle",'8' },
        {"eightsuperior",'⁸' },
        {"esuperior",'e' },
        {"exclamdownsmall",'¡' },
        {"exclamsmall",'!' },
        {"ff",'ﬀ' },
        {"ffi",'ﬃ' },
        {"ffl",'ﬄ' },
        {"figuredash",'‒' },
        {"fiveeighths",'⅝' },
        {"fiveinferior",'₅' },
        {"fiveoldstyle",'5' },
        {"fivesuperior",'⁵' },
        {"fourinferior",'₄' },
        {"fouroldstyle",'4' },
        {"foursuperior",'⁴' },
        {"hypheninferior",'₋' },
        {"hyphensuperior",'-' },
        {"isuperior",'ⁱ' },
        {"lsuperior",'l' },
        {"msuperior",'m' },
        {"nineinferior",'₉' },
        {"nineoldstyle",'9' },
        {"ninesuperior",'⁹' },
        {"nsuperior",'n' },
        {"onedotenleader",'․' },
        {"oneeighth",'⅛' },
        {"onefitted",'1' },
        {"oneinferior",'₁' },
        {"oneoldstyle",'1' },
        {"onethird",'⅓' },
        {"osuperior",'º' },
        {"parenleftinferior",'₍' },
        {"parenleftsuperior",'⁽' },
        {"parenrightinferior",'₎' },
        {"parenrightsuperior",'⁾' },
        {"periodinferior",'.' },
        {"periodsuperior",'.' },
        {"questiondownsmall",'¿' },
        {"questionsmall",'?' },
        {"rsuperior",'r' },
        {"rupiah",'₹' },
        {"seveneighths",'⅞' },
        {"seveninferior",'₇' },
        {"sevenoldstyle",'7' },
        {"sevensuperior",'⁷' },
        {"sixinferior",'₆' },
        {"sixoldstyle",'6' },
        {"sixsuperior",'⁶' },
        {"ssuperior",'s' },
        {"threeeighths",'⅜' },
        {"threeinferior",'₃' },
        {"threeoldstyle",'3' },
        {"threequartersemdash",'¾' },
        {"tsuperior",'t' },
        {"twodotenleader",'‥' },
        {"twoinferior",'₂' },
        {"twooldstyle",'2' },
        {"twothirds",'⅔' },
        {"zeroinferior",'₀' },
        {"zerooldstyle",'0' },
        {"zerosuperior",'⁰' },
        {"AEacute",'Ǽ' },
        {"Abreve",'Ă' },
        {"Alpha",'Α' },
        {"Alphatonos",'Ά' },
        {"Amacron",'Ā' },
        {"Aogonek",'Ą' },
        {"Aringacute",'Ǻ' },
        {"Beta",'Β' },
        {"Cacute",'Ć' },
        {"Ccaron",'Č' },
        {"Ccircumflex",'Ĉ' },
        {"Cdotaccent",'Ċ' },
        {"Chi",'Χ' },
        {"Dcaron",'Ď' },
        {"Dcroat",'Đ' },
        {"Delta",'∆' },
        {"Ebreve",'Ĕ' },
        {"Ecaron",'Ě' },
        {"Edotaccent",'Ė' },
        {"Emacron",'Ē' },
        {"Eng",'Ŋ' },
        {"Eogonek",'Ę' },
        {"Epsilon",'Ε' },
        {"Epsilontonos",'Έ' },
        {"Eta",'Η' },
        {"Etatonos",'Ή' },
        {"Gamma",'Γ' },
        {"Gbreve",'Ğ' },
        {"Gcaron",'Ǧ' },
        {"Gcircumflex",'Ĝ' },
        {"Gdotaccent",'Ġ' },
        {"H18533",'●' },
        {"H18543",'▪' },
        {"H18551",'▫' },
        {"H22073",'□' },
        {"Hbar",'Ħ' },
        {"Hcircumflex",'Ĥ' },
        {"IJ",'Ĳ' },
        {"Ibreve",'Ĭ' },
        {"Idotaccent",'İ' },
        {"Ifraktur",'ℑ' },
        {"Imacron",'Ī' },
        {"Iogonek",'Į' },
        {"Iota",'Ι' },
        {"Iotadieresis",'Ϊ' },
        {"Iotatonos",'Ί' },
        {"Itilde",'Ĩ' },
        {"Jcircumflex",'Ĵ' },
        {"Kappa",'Κ' },
        {"Lacute",'Ĺ' },
        {"Lambda",'Λ' },
        {"Lcaron",'Ľ' },
        {"Ldot",'Ŀ' },
        {"Mu",'Μ' },
        {"Nacute",'Ń' },
        {"Ncaron",'Ň' },
        {"Nu",'Ν' },
        {"Obreve",'Ŏ' },
        {"Ohorn",'Ơ' },
        {"Ohungarumlaut",'Ő' },
        {"Omacron",'Ō' },
        {"Omega",'Ω' },
        {"Omegatonos",'Ώ' },
        {"Omicron",'Ο' },
        {"Omicrontonos",'Ό' },
        {"Oslashacute",'Ǿ' },
        {"Phi",'Φ' },
        {"Pi",'Π' },
        {"Psi",'Ψ' },
        {"Racute",'Ŕ' },
        {"Rcaron",'Ř' },
        {"Rfraktur",'ℜ' },
        {"Rho",'Ρ' },
        {"SF010000",'┌' },
        {"SF020000",'└' },
        {"SF030000",'┐' },
        {"SF040000",'┘' },
        {"SF050000",'┼' },
        {"SF060000",'┬' },
        {"SF070000",'┴' },
        {"SF080000",'├' },
        {"SF090000",'┤' },
        {"SF100000",'─' },
        {"SF110000",'│' },
        {"SF190000",'╡' },
        {"SF200000",'╢' },
        {"SF210000",'╖' },
        {"SF220000",'╕' },
        {"SF230000",'╣' },
        {"SF240000",'║' },
        {"SF250000",'╗' },
        {"SF260000",'╝' },
        {"SF270000",'╜' },
        {"SF280000",'╛' },
        {"SF360000",'╞' },
        {"SF370000",'╟' },
        {"SF380000",'╚' },
        {"SF390000",'╔' },
        {"SF400000",'╩' },
        {"SF410000",'╦' },
        {"SF420000",'╠' },
        {"SF430000",'═' },
        {"SF440000",'╬' },
        {"SF450000",'╧' },
        {"SF460000",'╨' },
        {"SF470000",'╤' },
        {"SF480000",'╥' },
        {"SF490000",'╙' },
        {"SF500000",'╘' },
        {"SF510000",'╒' },
        {"SF520000",'╓' },
        {"SF530000",'╫' },
        {"SF540000",'╪' },
        {"Sacute",'Ś' },
        {"Scedilla",'Ş' },
        {"Scircumflex",'Ŝ' },
        {"Sigma",'Σ' },
        {"Tau",'Τ' },
        {"Tbar",'Ŧ' },
        {"Tcaron",'Ť' },
        {"Theta",'Θ' },
        {"Ubreve",'Ŭ' },
        {"Uhorn",'Ư' },
        {"Uhungarumlaut",'Ű' },
        {"Umacron",'Ū' },
        {"Uogonek",'Ų' },
        {"Upsilon",'Υ' },
        {"Upsilon1",'ϒ' },
        {"Upsilondieresis",'Ϋ' },
        {"Upsilontonos",'Ύ' },
        {"Uring",'Ů' },
        {"Utilde",'Ũ' },
        {"Wacute",'Ẃ' },
        {"Wcircumflex",'Ŵ' },
        {"Wdieresis",'Ẅ' },
        {"Wgrave",'Ẁ' },
        {"Xi",'Ξ' },
        {"Ycircumflex",'Ŷ' },
        {"Ygrave",'Ỳ' },
        {"Zacute",'Ź' },
        {"Zdotaccent",'Ż' },
        {"Zeta",'Ζ' },
        {"abreve",'ă' },
        {"acutecomb",'́' },
        {"aeacute",'ǽ' },
        {"aleph",'ℵ' },
        {"alpha",'α' },
        {"alphatonos",'ά' },
        {"amacron",'ā' },
        {"angle",'∠' },
        {"angleleft",'〈' },
        {"angleright",'〉' },
        {"anoteleia",'·' },
        {"aogonek",'ą' },
        {"approxequal",'≈' },
        {"aringacute",'ǻ' },
        {"arrowboth",'↔' },
        {"arrowdblboth",'⇔' },
        {"arrowdbldown",'⇓' },
        {"arrowdblleft",'⇐' },
        {"arrowdblright",'⇒' },
        {"arrowdblup",'⇑' },
        {"arrowdown",'↓' },
        {"arrowleft",'←' },
        {"arrowright",'→' },
        {"arrowup",'↑' },
        {"arrowupdn",'↕' },
        {"arrowupdnbse",'↨' },
        {"asteriskmath",'∗' },
        {"beta",'β' },
        {"block",'█' },
        {"cacute",'ć' },
        {"carriagereturn",'↵' },
        {"ccaron",'č' },
        {"ccircumflex",'ĉ' },
        {"cdotaccent",'ċ' },
        {"chi",'χ' },
        {"circle",'○' },
        {"circlemultiply",'⊗' },
        {"circleplus",'⊕' },
        {"club",'♣' },
        {"congruent",'≅' },
        {"dcaron",'ď' },
        {"dcroat",'đ' },
        {"delta",'δ' },
        {"diamond",'♦' },
        {"dieresistonos",'΅' },
        {"dkshade",'▓' },
        {"dnblock",'▄' },
        {"dong",'₫' },
        {"dotbelowcomb",'̣' },
        {"dotmath",'⋅' },
        {"ebreve",'ĕ' },
        {"ecaron",'ě' },
        {"edotaccent",'ė' },
        {"element",'∈' },
        {"emacron",'ē' },
        {"emptyset",'∅' },
        {"eng",'ŋ' },
        {"eogonek",'ę' },
        {"epsilon",'ε' },
        {"epsilontonos",'έ' },
        {"equivalence",'≡' },
        {"estimated",'℮' },
        {"eta",'η' },
        {"etatonos",'ή' },
        {"exclamdbl",'‼' },
        {"existential",'∃' },
        {"female",'♀' },
        {"filledbox",'■' },
        {"filledrect",'▬' },
        {"franc",'₣' },
        {"gamma",'γ' },
        {"gbreve",'ğ' },
        {"gcaron",'ǧ' },
        {"gcircumflex",'ĝ' },
        {"gdotaccent",'ġ' },
        {"gradient",'∇' },
        {"gravecomb",'̀' },
        {"greaterequal",'≥' },
        {"hbar",'ħ' },
        {"hcircumflex",'ĥ' },
        {"heart",'♥' },
        {"hookabovecomb",'̉' },
        {"house",'⌂' },
        {"ibreve",'ĭ' },
        {"ij",'ĳ' },
        {"imacron",'ī' },
        {"infinity",'∞' },
        {"integral",'∫' },
        {"integralbt",'⌡' },
        {"integraltp",'⌠' },
        {"intersection",'∩' },
        {"invbullet",'◘' },
        {"invcircle",'◙' },
        {"invsmileface",'☻' },
        {"iogonek",'į' },
        {"iota",'ι' },
        {"iotadieresis",'ϊ' },
        {"iotadieresistonos",'ΐ' },
        {"iotatonos",'ί' },
        {"itilde",'ĩ' },
        {"jcircumflex",'ĵ' },
        {"kappa",'κ' },
        {"kgreenlandic",'ĸ' },
        {"lacute",'ĺ' },
        {"lambda",'λ' },
        {"lcaron",'ľ' },
        {"ldot",'ŀ' },
        {"lessequal",'≤' },
        {"lfblock",'▌' },
        {"lira",'₤' },
        {"logicaland",'∧' },
        {"logicalor",'∨' },
        {"longs",'ſ' },
        {"lozenge",'◊' },
        {"ltshade",'░' },
        {"male",'♂' },
        {"minute",'′' },
        {"musicalnote",'♪' },
        {"musicalnotedbl",'♫' },
        {"nacute",'ń' },
        {"napostrophe",'ŉ' },
        {"ncaron",'ň' },
        {"notelement",'∉' },
        {"notequal",'≠' },
        {"notsubset",'⊄' },
        {"nu",'ν' },
        {"obreve",'ŏ' },
        {"ohorn",'ơ' },
        {"ohungarumlaut",'ő' },
        {"omacron",'ō' },
        {"omega",'ω' },
        {"omega1",'ϖ' },
        {"omegatonos",'ώ' },
        {"omicron",'ο' },
        {"omicrontonos",'ό' },
        {"openbullet",'◦' },
        {"orthogonal",'∟' },
        {"oslashacute",'ǿ' },
        {"partialdiff",'∂' },
        {"perpendicular",'⊥' },
        {"peseta",'₧' },
        {"phi",'φ' },
        {"phi1",'ϕ' },
        {"pi",'π' },
        {"prescription",'℞' },
        {"product",'∏' },
        {"propersubset",'⊂' },
        {"propersuperset",'⊃' },
        {"proportional",'∝' },
        {"psi",'ψ' },
        {"quotereversed",'‛' },
        {"racute",'ŕ' },
        {"radical",'√' },
        {"rcaron",'ř' },
        {"reflexsubset",'⊆' },
        {"reflexsuperset",'⊇' },
        {"revlogicalnot",'⌐' },
        {"rho",'ρ' },
        {"rtblock",'▐' },
        {"sacute",'ś' },
        {"scedilla",'ş' },
        {"scircumflex",'ŝ' },
        {"second",'″' },
        {"shade",'▒' },
        {"sigma",'σ' },
        {"sigma1",'ς' },
        {"similar",'∼' },
        {"smileface",'☺' },
        {"space",' ' },
        {"spade",'♠' },
        {"suchthat",'∋' },
        {"summation",'∑' },
        {"sun",'☼' },
        {"tau",'τ' },
        {"tbar",'ŧ' },
        {"tcaron",'ť' },
        {"therefore",'∴' },
        {"theta",'θ' },
        {"theta1",'ϑ' },
        {"tildecomb",'̃' },
        {"tonos",'΄' },
        {"triagdn",'▼' },
        {"triaglf",'◄' },
        {"triagrt",'►' },
        {"triagup",'▲' },
        {"ubreve",'ŭ' },
        {"uhorn",'ư' },
        {"uhungarumlaut",'ű' },
        {"umacron",'ū' },
        {"underscoredbl",'‗' },
        {"union",'∪' },
        {"universal",'∀' },
        {"uogonek",'ų' },
        {"upblock",'▀' },
        {"upsilon",'υ' },
        {"upsilondieresis",'ϋ' },
        {"upsilondieresistonos",'ΰ' },
        {"upsilontonos",'ύ' },
        {"uring",'ů' },
        {"utilde",'ũ' },
        {"wacute",'ẃ' },
        {"wcircumflex",'ŵ' },
        {"wdieresis",'ẅ' },
        {"weierstrass",'℘' },
        {"wgrave",'ẁ' },
        {"xi",'ξ' },
        {"ycircumflex",'ŷ' },
        {"ygrave",'ỳ' },
        {"zacute",'ź' },
        {"zdotaccent",'ż' },
        {"zeta",'ζ' },
        {"a100",'❞' },
        {"a101",'❡' },
        {"a102",'❢' },
        {"a103",'❣' },
        {"a104",'❤' },
        {"a105",'✐' },
        {"a106",'❥' },
        {"a107",'❦' },
        {"a108",'❧' },
        {"a109",'♠' },
        {"a10",'✡' },
        {"a110",'♥' },
        {"a111",'♦' },
        {"a112",'♣' },
        {"a117",'✉' },
        {"a118",'✈' },
        {"a119",'✇' },
        {"a11",'☛' },
        {"a120",'①' },
        {"a121",'②' },
        {"a122",'③' },
        {"a123",'④' },
        {"a124",'⑤' },
        {"a125",'⑥' },
        {"a126",'⑦' },
        {"a127",'⑧' },
        {"a128",'⑨' },
        {"a129",'⑩' },
        {"a12",'☞' },
        {"a130",'❶' },
        {"a131",'❷' },
        {"a132",'❸' },
        {"a133",'❹' },
        {"a134",'❺' },
        {"a135",'❻' },
        {"a136",'❼' },
        {"a137",'❽' },
        {"a138",'❾' },
        {"a139",'❿' },
        {"a13",'✌' },
        {"a140",'➀' },
        {"a141",'➁' },
        {"a142",'➂' },
        {"a143",'➃' },
        {"a144",'➄' },
        {"a145",'➅' },
        {"a146",'➆' },
        {"a147",'➇' },
        {"a148",'➈' },
        {"a149",'➉' },
        {"a14",'✍' },
        {"a150",'➊' },
        {"a151",'➋' },
        {"a152",'➌' },
        {"a153",'➍' },
        {"a154",'➎' },
        {"a155",'➏' },
        {"a156",'➐' },
        {"a157",'➑' },
        {"a158",'➒' },
        {"a159",'➓' },
        {"a15",'✎' },
        {"a160",'➔' },
        {"a161",'→' },
        {"a162",'➣' },
        {"a163",'↔' },
        {"a164",'↕' },
        {"a165",'➙' },
        {"a166",'➛' },
        {"a167",'➜' },
        {"a168",'➝' },
        {"a169",'➞' },
        {"a16",'✏' },
        {"a170",'➟' },
        {"a171",'➠' },
        {"a172",'➡' },
        {"a173",'➢' },
        {"a174",'➤' },
        {"a175",'➥' },
        {"a176",'➦' },
        {"a177",'➧' },
        {"a178",'➨' },
        {"a179",'➩' },
        {"a17",'✑' },
        {"a180",'➫' },
        {"a181",'➭' },
        {"a182",'➯' },
        {"a183",'➲' },
        {"a184",'➳' },
        {"a185",'➵' },
        {"a186",'➸' },
        {"a187",'➺' },
        {"a188",'➻' },
        {"a189",'➼' },
        {"a18",'✒' },
        {"a190",'➽' },
        {"a191",'➾' },
        {"a192",'➚' },
        {"a193",'➪' },
        {"a194",'➶' },
        {"a195",'➹' },
        {"a196",'➘' },
        {"a197",'➴' },
        {"a198",'➷' },
        {"a199",'➬' },
        {"a19",'✓' },
        {"a1",'✁' },
        {"a200",'➮' },
        {"a201",'➱' },
        {"a202",'✃' },
        {"a203",'❐' },
        {"a204",'❒' },
        {"a205",'❮' },
        {"a206",'❰' },
        {"a20",'✔' },
        {"a21",'✕' },
        {"a22",'✖' },
        {"a23",'✗' },
        {"a24",'✘' },
        {"a25",'✙' },
        {"a26",'✚' },
        {"a27",'✛' },
        {"a28",'✜' },
        {"a29",'✢' },
        {"a2",'✂' },
        {"a30",'✣' },
        {"a31",'✤' },
        {"a32",'✥' },
        {"a33",'✦' },
        {"a34",'✧' },
        {"a35",'★' },
        {"a36",'✩' },
        {"a37",'✪' },
        {"a38",'✫' },
        {"a39",'✬' },
        {"a3",'✄' },
        {"a40",'✭' },
        {"a41",'✮' },
        {"a42",'✯' },
        {"a43",'✰' },
        {"a44",'✱' },
        {"a45",'✲' },
        {"a46",'✳' },
        {"a47",'✴' },
        {"a48",'✵' },
        {"a49",'✶' },
        {"a4",'☎' },
        {"a50",'✷' },
        {"a51",'✸' },
        {"a52",'✹' },
        {"a53",'✺' },
        {"a54",'✻' },
        {"a55",'✼' },
        {"a56",'✽' },
        {"a57",'✾' },
        {"a58",'✿' },
        {"a59",'❀' },
        {"a5",'✆' },
        {"a60",'❁' },
        {"a61",'❂' },
        {"a62",'❃' },
        {"a63",'❄' },
        {"a64",'❅' },
        {"a65",'❆' },
        {"a66",'❇' },
        {"a67",'❈' },
        {"a68",'❉' },
        {"a69",'❊' },
        {"a6",'✝' },
        {"a70",'❋' },
        {"a71",'●' },
        {"a72",'❍' },
        {"a73",'■' },
        {"a74",'❏' },
        {"a75",'❑' },
        {"a76",'▲' },
        {"a77",'▼' },
        {"a78",'◆' },
        {"a79",'❖' },
        {"a7",'✞' },
        {"a81",'◗' },
        {"a82",'❘' },
        {"a83",'❙' },
        {"a84",'❚' },
        {"a85",'❯' },
        {"a86",'❱' },
        {"a87",'❲' },
        {"a88",'❳' },
        {"a89",'❨' },
        {"a8",'✟' },
        {"a90",'❩' },
        {"a91",'❬' },
        {"a92",'❭' },
        {"a93",'❪' },
        {"a94",'❫' },
        {"a95",'❴' },
        {"a96",'❵' },
        {"a97",'❛' },
        {"a98",'❜' },
        {"a99",'❝' },
        {"a9",'✠' },
      };


    public static char[] Standard = {
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\u0020', '\u0021', '\u0022', '\u0023', '\u0024', '\u0025', '\u0026', '\u2019',
        '\u0028', '\u0029', '\u002A', '\u002B', '\u002C', '\u002D', '\u002E', '\u002F',
        '\u0030', '\u0031', '\u0032', '\u0033', '\u0034', '\u0035', '\u0036', '\u0037',
        '\u0038', '\u0039', '\u003A', '\u003B', '\u003C', '\u003D', '\u003E', '\u003F',
        '\u0040', '\u0041', '\u0042', '\u0043', '\u0044', '\u0045', '\u0046', '\u0047',
        '\u0048', '\u0049', '\u004A', '\u004B', '\u004C', '\u004D', '\u004E', '\u004F',
        '\u0050', '\u0051', '\u0052', '\u0053', '\u0054', '\u0055', '\u0056', '\u0057',
        '\u0058', '\u0059', '\u005A', '\u005B', '\u005C', '\u005D', '\u005E', '\u005F',
        '\u2018', '\u0061', '\u0062', '\u0063', '\u0064', '\u0065', '\u0066', '\u0067',
        '\u0068', '\u0069', '\u006A', '\u006B', '\u006C', '\u006D', '\u006E', '\u006F',
        '\u0070', '\u0071', '\u0072', '\u0073', '\u0074', '\u0075', '\u0076', '\u0077',
        '\u0078', '\u0079', '\u007A', '\u007B', '\u007C', '\u007D', '\u007E', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\u00A1', '\u00A2', '\u00A3', '\u2044', '\u00A5', '\u0192', '\u00A7',
        '\u00A4', '\u0027', '\u201C', '\u00AB', '\u2039', '\u203A', '\uFB01', '\uFB02',
        '\uFFFF', '\u2013', '\u2020', '\u2021', '\u00B7', '\uFFFF', '\u00B6', '\u2022',
        '\u201A', '\u201E', '\u201D', '\u00BB', '\u2026', '\u2030', '\uFFFF', '\u00BF',
        '\uFFFF', '\u0060', '\u00B4', '\u02C6', '\u02DC', '\u00AF', '\u02D8', '\u02D9',
        '\u00A8', '\uFFFF', '\u02DA', '\u00B8', '\uFFFF', '\u02DD', '\u02DB', '\u02C7',
        '\u2014', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\u00C6', '\uFFFF', '\u00AA', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\u0141', '\u00D8', '\u0152', '\u00BA', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\u00E6', '\uFFFF', '\uFFFF', '\uFFFF', '\u0131', '\uFFFF', '\uFFFF',
        '\u0142', '\u00F8', '\u0153', '\u00DF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
      };


    public static char[] MacRoman = {
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\u0020', '\u0021', '\u0022', '\u0023', '\u0024', '\u0025', '\u0026', '\u0027',
        '\u0028', '\u0029', '\u002A', '\u002B', '\u002C', '\u002D', '\u002E', '\u002F',
        '\u0030', '\u0031', '\u0032', '\u0033', '\u0034', '\u0035', '\u0036', '\u0037',
        '\u0038', '\u0039', '\u003A', '\u003B', '\u003C', '\u003D', '\u003E', '\u003F',
        '\u0040', '\u0041', '\u0042', '\u0043', '\u0044', '\u0045', '\u0046', '\u0047',
        '\u0048', '\u0049', '\u004A', '\u004B', '\u004C', '\u004D', '\u004E', '\u004F',
        '\u0050', '\u0051', '\u0052', '\u0053', '\u0054', '\u0055', '\u0056', '\u0057',
        '\u0058', '\u0059', '\u005A', '\u005B', '\u005C', '\u005D', '\u005E', '\u005F',
        '\u0060', '\u0061', '\u0062', '\u0063', '\u0064', '\u0065', '\u0066', '\u0067',
        '\u0068', '\u0069', '\u006A', '\u006B', '\u006C', '\u006D', '\u006E', '\u006F',
        '\u0070', '\u0071', '\u0072', '\u0073', '\u0074', '\u0075', '\u0076', '\u0077',
        '\u0078', '\u0079', '\u007A', '\u007B', '\u007C', '\u007D', '\u007E', '\uFFFF',
        '\u00C4', '\u00C5', '\u00C7', '\u00C9', '\u00D1', '\u00D6', '\u00DC', '\u00E1',
        '\u00E0', '\u00E2', '\u00E4', '\u00E3', '\u00E5', '\u00E7', '\u00E9', '\u00E8',
        '\u00EA', '\u00EB', '\u00ED', '\u00EC', '\u00EE', '\u00EF', '\u00F1', '\u00F3',
        '\u00F2', '\u00F4', '\u00F6', '\u00F5', '\u00FA', '\u00F9', '\u00FB', '\u00FC',
        '\u2020', '\u00B0', '\u00A2', '\u00A3', '\u00A7', '\u2022', '\u00B6', '\u00DF',
        '\u00AE', '\u00A9', '\u2122', '\u00B4', '\u00A8', '\uFFFF', '\u00C6', '\u00D8',
        '\uFFFF', '\u00B1', '\uFFFF', '\uFFFF', '\u00A5', '\u00B5', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\u00AA', '\u00BA', '\uFFFF', '\u00E6', '\u00F8',
        '\u00BF', '\u00A1', '\u00AC', '\uFFFF', '\u0192', '\uFFFF', '\uFFFF', '\u00AB',
        '\u00BB', '\u2026', '\uFFFF', '\u00C0', '\u00C3', '\u00D5', '\u0152', '\u0153',
        '\u2013', '\u2014', '\u201C', '\u201D', '\u2018', '\u2019', '\u00F7', '\uFFFF',
        '\u00FF', '\u0178', '\u2044', '\u00A4', '\u2039', '\u203A', '\uFB01', '\uFB02',
        '\u2021', '\u00B7', '\u201A', '\u201E', '\u2030', '\u00C2', '\u00CA', '\u00C1',
        '\u00CB', '\u00C8', '\u00CD', '\u00CE', '\u00CF', '\u00CC', '\u00D3', '\u00D4',
        '\uFFFF', '\u00D2', '\u00DA', '\u00DB', '\u00D9', '\u0131', '\u02C6', '\u02DC',
        '\u00AF', '\u02D8', '\u02D9', '\u02DA', '\u00B8', '\u02DD', '\u02DB', '\u02C7',
      };


    public static char[] WinAnsi = {
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\u0020', '\u0021', '\u0022', '\u0023', '\u0024', '\u0025', '\u0026', '\u0027',
        '\u0028', '\u0029', '\u002A', '\u002B', '\u002C', '\u002D', '\u002E', '\u002F',
        '\u0030', '\u0031', '\u0032', '\u0033', '\u0034', '\u0035', '\u0036', '\u0037',
        '\u0038', '\u0039', '\u003A', '\u003B', '\u003C', '\u003D', '\u003E', '\u003F',
        '\u0040', '\u0041', '\u0042', '\u0043', '\u0044', '\u0045', '\u0046', '\u0047',
        '\u0048', '\u0049', '\u004A', '\u004B', '\u004C', '\u004D', '\u004E', '\u004F',
        '\u0050', '\u0051', '\u0052', '\u0053', '\u0054', '\u0055', '\u0056', '\u0057',
        '\u0058', '\u0059', '\u005A', '\u005B', '\u005C', '\u005D', '\u005E', '\u005F',
        '\u0060', '\u0061', '\u0062', '\u0063', '\u0064', '\u0065', '\u0066', '\u0067',
        '\u0068', '\u0069', '\u006A', '\u006B', '\u006C', '\u006D', '\u006E', '\u006F',
        '\u0070', '\u0071', '\u0072', '\u0073', '\u0074', '\u0075', '\u0076', '\u0077',
        '\u0078', '\u0079', '\u007A', '\u007B', '\u007C', '\u007D', '\u007E', '\uFFFF',
        '\u20AC', '\uFFFF', '\u201A', '\u0192', '\u201E', '\u2026', '\u2020', '\u2021',
        '\u02C6', '\u2030', '\u0160', '\u2039', '\u0152', '\uFFFF', '\u017D', '\uFFFF',
        '\uFFFF', '\u2018', '\u2019', '\u201C', '\u201D', '\u2022', '\u2013', '\u2014',
        '\u02DC', '\u2122', '\u0161', '\u203A', '\u0153', '\uFFFF', '\u017E', '\u0178',
        '\uFFFF', '\u00A1', '\u00A2', '\u00A3', '\u00A4', '\u00A5', '\u00A6', '\u00A7',
        '\u00A8', '\u00A9', '\u00AA', '\u00AB', '\u00AC', '\uFFFF', '\u00AE', '\u00AF',
        '\u00B0', '\u00B1', '\u00B2', '\u00B3', '\u00B4', '\u00B5', '\u00B6', '\u00B7',
        '\u00B8', '\u00B9', '\u00BA', '\u00BB', '\u00BC', '\u00BD', '\u00BE', '\u00BF',
        '\u00C0', '\u00C1', '\u00C2', '\u00C3', '\u00C4', '\u00C5', '\u00C6', '\u00C7',
        '\u00C8', '\u00C9', '\u00CA', '\u00CB', '\u00CC', '\u00CD', '\u00CE', '\u00CF',
        '\u00D0', '\u00D1', '\u00D2', '\u00D3', '\u00D4', '\u00D5', '\u00D6', '\u00D7',
        '\u00D8', '\u00D9', '\u00DA', '\u00DB', '\u00DC', '\u00DD', '\u00DE', '\u00DF',
        '\u00E0', '\u00E1', '\u00E2', '\u00E3', '\u00E4', '\u00E5', '\u00E6', '\u00E7',
        '\u00E8', '\u00E9', '\u00EA', '\u00EB', '\u00EC', '\u00ED', '\u00EE', '\u00EF',
        '\u00F0', '\u00F1', '\u00F2', '\u00F3', '\u00F4', '\u00F5', '\u00F6', '\u00F7',
        '\u00F8', '\u00F9', '\u00FA', '\u00FB', '\u00FC', '\u00FD', '\u00FE', '\u00FF',
      };


    public static char[] PdfEncoding = {
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\uFFFF', '\u0009', '\u000A', '\uFFFF', '\u000C', '\u000D', '\uFFFF', '\uFFFF',
        '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF', '\uFFFF',
        '\u02D8', '\u02C7', '\u02C6', '\u02D9', '\u02DD', '\u02DB', '\u02DA', '\u02DC',
        '\u0020', '\u0021', '\u0022', '\u0023', '\u0024', '\u0025', '\u0026', '\u0027',
        '\u0028', '\u0029', '\u002A', '\u002B', '\u002C', '\u002D', '\u002E', '\u002F',
        '\u0030', '\u0031', '\u0032', '\u0033', '\u0034', '\u0035', '\u0036', '\u0037',
        '\u0038', '\u0039', '\u003A', '\u003B', '\u003C', '\u003D', '\u003E', '\u003F',
        '\u0040', '\u0041', '\u0042', '\u0043', '\u0044', '\u0045', '\u0046', '\u0047',
        '\u0048', '\u0049', '\u004A', '\u004B', '\u004C', '\u004D', '\u004E', '\u004F',
        '\u0050', '\u0051', '\u0052', '\u0053', '\u0054', '\u0055', '\u0056', '\u0057',
        '\u0058', '\u0059', '\u005A', '\u005B', '\u005C', '\u005D', '\u005E', '\u005F',
        '\u0060', '\u0061', '\u0062', '\u0063', '\u0064', '\u0065', '\u0066', '\u0067',
        '\u0068', '\u0069', '\u006A', '\u006B', '\u006C', '\u006D', '\u006E', '\u006F',
        '\u0070', '\u0071', '\u0072', '\u0073', '\u0074', '\u0075', '\u0076', '\u0077',
        '\u0078', '\u0079', '\u007A', '\u007B', '\u007C', '\u007D', '\u007E', '\uFFFF',
        '\u2022', '\u2020', '\u2021', '\u2026', '\u2014', '\u2013', '\u0192', '\u2044',
        '\u2039', '\u203A', '\u2212', '\u2030', '\u201E', '\u201C', '\u201D', '\u2018',
        '\u2019', '\u201A', '\u2122', '\uFB01', '\uFB02', '\u0141', '\u0152', '\u0160',
        '\u0178', '\u017D', '\u0131', '\u0142', '\u0153', '\u0161', '\u017E', '\uFFFF',
        '\u20AC', '\u00A1', '\u00A2', '\u00A3', '\u00A4', '\u00A5', '\u00A6', '\u00A7',
        '\u00A8', '\u00A9', '\u00AA', '\u00AB', '\u00AC', '\uFFFF', '\u00AE', '\u00AF',
        '\u00B0', '\u00B1', '\u00B2', '\u00B3', '\u00B4', '\u00B5', '\u00B6', '\u00B7',
        '\u00B8', '\u00B9', '\u00BA', '\u00BB', '\u00BC', '\u00BD', '\u00BE', '\u00BF',
        '\u00C0', '\u00C1', '\u00C2', '\u00C3', '\u00C4', '\u00C5', '\u00C6', '\u00C7',
        '\u00C8', '\u00C9', '\u00CA', '\u00CB', '\u00CC', '\u00CD', '\u00CE', '\u00CF',
        '\u00D0', '\u00D1', '\u00D2', '\u00D3', '\u00D4', '\u00D5', '\u00D6', '\u00D7',
        '\u00D8', '\u00D9', '\u00DA', '\u00DB', '\u00DC', '\u00DD', '\u00DE', '\u00DF',
        '\u00E0', '\u00E1', '\u00E2', '\u00E3', '\u00E4', '\u00E5', '\u00E6', '\u00E7',
        '\u00E8', '\u00E9', '\u00EA', '\u00EB', '\u00EC', '\u00ED', '\u00EE', '\u00EF',
        '\u00F0', '\u00F1', '\u00F2', '\u00F3', '\u00F4', '\u00F5', '\u00F6', '\u00F7',
        '\u00F8', '\u00F9', '\u00FA', '\u00FB', '\u00FC', '\u00FD', '\u00FE', '\u00FF',
      };
    // >>>>>>>>>>>>>>>>>>>>>>>>>end code copied from CodeGenerator<<<<<<<<<<<<<<<<<<<<<<<<<


    public static char[] GetEncoding8Bit(string encodingName) {
      if (encodingName=="WinAnsiEncoding") {
        return WinAnsi.ToArray();
      } else if (encodingName=="MacRomanEncoding") {
        return MacRoman.ToArray();
      } else if (encodingName=="MacExpertEncoding") {
        return MacRoman.ToArray();
      }

      throw new Exception($"Unknown encoding name '{encodingName}'.");
    }


    public static void ApplyToUnitCode(
      DictionaryToken toUnicodeStream, 
      ref char[] encoding, 
      out string toUnicodeHeader,
      out SortedDictionary<int, char> cMap) 
    {
      var tokeniser = toUnicodeStream.GetStreamBytes();
      if (tokeniser.GetStreamOpCode("begincmap") is null)
        throw tokeniser.StreamException("ToUnicode stream is missing 'begincmap'.");

      tokeniser.SetStreamMark();
      if (tokeniser.GetStreamOpCode("endcodespacerange") is null)
        throw tokeniser.StreamException("ToUnicode stream is missing 'endcodespacerange'.");

      toUnicodeHeader = tokeniser.GetStreamMarkedText();
      cMap = new SortedDictionary<int, char>();
      while (true) {
        var opCode = tokeniser.GetStreamOpCode();
        if (opCode is null) throw tokeniser.StreamException("ToUnicode stream incomplete.");

        var opCodeSpan = opCode.Value.Span;
        if (isEqual("beginbfchar", opCodeSpan)) {
          tokeniser.StartStreamArgumentReading();
          var linesCount = tokeniser.GetStreamInt();
          tokeniser.EndStreamArgumentReading();
          for (int lineIndex = 0; lineIndex < linesCount; lineIndex++) {
            var cid = tokeniser.GetStreamCid();
            var unicodeChar = (char)tokeniser.GetStreamUnicode();
            encoding[cid] = unicodeChar;
            cMap.Add(cid, unicodeChar);
          }
          opCode = tokeniser.GetStreamOpCode();
          opCodeSpan = opCode!.Value.Span;
          if (!isEqual("endbfchar", opCodeSpan))
            throw tokeniser.StreamException("ToUnicode stream is missing 'endbfchar' after 'beginbfchar'.");

        } else if (isEqual("beginbfrange", opCodeSpan)) {
          tokeniser.StartStreamArgumentReading();
          var linesCount = tokeniser.GetStreamInt();
          tokeniser.EndStreamArgumentReading();
          for (int lineIndex = 0; lineIndex < linesCount; lineIndex++) {
            var cidStart = tokeniser.GetStreamCid();
            var cidEnd = tokeniser.GetStreamCid();
            if (cidEnd<cidStart)
              throw tokeniser.StreamException($"ToUnicode: beginbfrange cid1 '{cidStart} should be smaller than cid2'{cidEnd}'.");

            var unicodeChar = tokeniser.GetStreamUnicode();
            for (ushort cidIndex = cidStart; cidIndex <= cidEnd; cidIndex++) {
              cMap.Add(cidIndex, (char)unicodeChar);
              encoding[cidIndex] = (char)unicodeChar++;
            }
          }
          opCode = tokeniser.GetStreamOpCode();
          opCodeSpan = opCode!.Value.Span;
          if (!isEqual("endbfrange", opCodeSpan))
            throw tokeniser.StreamException("ToUnicode stream is missing 'endbfrange' after 'beginbfrange'.");

        } else if (isEqual("endcmap", opCodeSpan)) {
          break;
        }

      }
    }


    private static bool isEqual(string expectedString, ReadOnlySpan<byte> opCodeSpan) {
      if (expectedString.Length!=opCodeSpan.Length) return false;

      for (int charIndex = 0; charIndex < expectedString.Length; charIndex++) {
        if (expectedString[charIndex]!=opCodeSpan[charIndex]) return false;

      }
      return true;
    }


  }
}
